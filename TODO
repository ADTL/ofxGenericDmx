TODO porting and branch integration
- test to see whether the addons actually still works with new libraries in OSX
- extend script for library compilation in linux and run according tests
- remove libusb (since it's been replaced by libusbx)
- create script to compile libraries in w32 (build libftdi with cmake -> see pull rq)
- recheck if vs2010 project still works
- create working CB project in w32
- make sure project files for osx/linux/w32:vs2010/w32:cb are all present in example and work properly (the latter should be true at this point)
- update README with new supported systems and include credits etc
- make sure it's obvious the addon supports the DMX USB PRO (does the first line in README work?)
- (check why this works) does libftdi on w32 really not use libusb-compat?? it doesn't seem to but it must, right?



TODO
- Add v0.1 mark, copyright, credits to Chris, etc.
- only tested on 10.6 & of0061 (and at least the libftdi in the d2xx driver does not work on 10.6 due to a libusb0.1 bug (which libftdi is linked against))
- search oF forum to find all dmx addons and their mods in order to cover their collective support
  (would probably mean adding serial/vcp support and maybe dmx512 support as well)
- adapt for serial communication: create SerialHwChannel with subclasses VcpChannel and FtdiChannel(currently FtdiDevice)
  then adapt DmxDevice and subclasses to use the interface instead of FtdiDevice/FtdiChannel
- Maybe move subclasses to subdirectory (although ofxOsc, for instance, does not do so)
- Test and adapt for windows (use d2xx? or libftdi + libusb-win32?)
- Add proper documentation to code.
- links to all references used (at least ftdi & enttec docs)
- decide how to handle the start code (it's probably fine the way it is)

linux C::B project setup:
 -add files to project
 -add ftdi usb and usb-1.0 to libraries in linker settings (in that order!)
 -add paths to all three library directories in linker tab of search directories
 -there might be a more elegant/practical way
 -maybe just add an example including working codeblocks project for linux and windows as well as an xcode project
